- name: Create cloud init
  template:
    src: "could-init/node.yml"
    dest: "{{playbook_dir}}/cloud-init/{{item}}.yml"
  with_items: "{{ VM_NAMES }}"

- name: Create miltipass VMs
  theko2fi.multipass.multipass_vm:
    name: "{{item}}"
    cpus: "{{VM_CPUS}}"
    memory: "{{VM_MEMORY}}"
    disk: "{{VM_DISK}}"
    cloud_init: "{{playbook_dir}}/cloud-init/{{item}}.yml"
    state: present
    purge: true
  with_items: "{{ VM_NAMES }}"

- name: Add the VM to the inventory
  ansible.builtin.add_host:
    name: "{{item}}"
    ansible_host: "{{item}}"
    ansible_connection: theko2fi.multipass.multipass
    ansible_python_interpreter: '/usr/bin/python3'
  with_items: "{{ VM_NAMES }}"

- name: Install microk8s hostpath-storage plugin
  theko2fi.multipass.multipass_vm_exec:
    name: "{{VM_NAMES[0]}}"
    command: "/snap/bin/microk8s.enable hostpath-storage"

- name: Install microk8s ingress plugin
  theko2fi.multipass.multipass_vm_exec:
    name: "{{VM_NAMES[0]}}"
    command: "/snap/bin/microk8s.enable ingress"

- name: Install microk8s rbac plugin
  theko2fi.multipass.multipass_vm_exec:
    name: "{{VM_NAMES[0]}}"
    command: "/snap/bin/microk8s.enable hostpath-storage"

- name: Configure microk8s addons git
  theko2fi.multipass.multipass_vm_exec:
    name: "{{VM_NAMES[0]}}"
    command: "git config --global --add safe.directory /snap/microk8s/current/addons/community/.git"

- name: Install microk8s community plugin
  theko2fi.multipass.multipass_vm_exec:
    name: "{{VM_NAMES[0]}}"
    command: "/snap/bin/microk8s.enable community"

- name: Install microk8s portainer plugin
  theko2fi.multipass.multipass_vm_exec:
    name: "{{VM_NAMES[0]}}"
    command: "/snap/bin/microk8s.enable portainer"

- name: Install microk8s multus plugin
  theko2fi.multipass.multipass_vm_exec:
    name: "{{VM_NAMES[0]}}"
    command: "/snap/bin/microk8s.enable multus"

- name: Install microk8s metrics-server plugin
  theko2fi.multipass.multipass_vm_exec:
    name: "{{VM_NAMES[0]}}"
    command: "/snap/bin/microk8s.enable metrics-server"
    
- name: Install microk8s dashboard plugin
  theko2fi.multipass.multipass_vm_exec:
    name: "{{VM_NAMES[0]}}"
    command: "/snap/bin/microk8s.enable dashboard"

- name: Get cluster token
  theko2fi.multipass.multipass_vm_exec:
    name: "{{VM_NAMES[0]}}"
    command: "microk8s add-node --format short"
  register: result

- name: Join cluster
  theko2fi.multipass.multipass_vm_exec:
    name: "{{item}}"
    command: "{{result.stdout_lines[0]}}"
  ignore_errors: true
  with_items: "{{ VM_NAMES }}"

- name: Copy observability heml values 
  theko2fi.multipass.multipass_vm_transfer_into:
    name: "{{VM_NAMES[0]}}"
    src: "{{playbook_dir}}/helm/observability/{{DOMAIN}}/values.yml"
    dest: /home/ubuntu/values.yml

- name: Install microk8s observability plugin
  theko2fi.multipass.multipass_vm_exec:
    name: "{{VM_NAMES[0]}}"
    command: "/snap/bin/microk8s.enable observability --kube-prometheus-stack-values=/home/ubuntu/values.yml"
  register: result

- name: Get microk8s kubectl config
  theko2fi.multipass.multipass_vm_exec:
    name: "{{VM_NAMES[0]}}"
    command: "microk8s config view"
  register: result

- name: Save microk8s kubectl config
  ansible.builtin.copy:
    content: "{{result.stdout}}"
    dest: ~/.kube/config
  delegate_to: localhost

